package integration

import (
	"encoding/hex"
	"fmt"
	. "github.com/kaifei-bianjie/common-parser/codec"
	"github.com/kaifei-bianjie/common-parser/utils"
)

func (s IntegrationTestSuite) TestGov() {
	cases := []SubTest{
		{
			"SubmitProposal",
			SubmitProposal,
		},
		{
			"Deposit",
			Deposit,
		},
		{
			"Vote",
			Vote,
		},
	}

	for _, t := range cases {
		s.Run(t.testName, func() {
			t.testCase(s)
		})
	}
}

func SubmitProposal(s IntegrationTestSuite) {
	txBytes, err := hex.DecodeString("0aa7010aa4010a252f636f736d6f732e676f762e763162657461312e4d73675375626d697450726f706f73616c127b0a390a202f636f736d6f732e676f762e763162657461312e5465787450726f706f73616c12150a057465737431120cc3a6c2b5c28bc3a8c2afc295120f0a04756269671207313030303030301a2d636f736d6f7331373471796c3032637570797171373763717174646c306672646136646c3372706c343970336412690a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102e570922aa1131475a67207eb1070cd730a7b66620878b967dde28c91aafbd8a412040a020801180312150a0e0a047562696712063235303030301080ade2041a40f4118f021834be325aea7fecf7ce725400f42c948949afdcc5ecc337ad9526a9253ee39958b09d310b84dc971826cda32fc8fc0bd689774b81c942f210f3280c")
	if err != nil {
		fmt.Println(err.Error())
	}
	authTx, err := GetSigningTx(txBytes)
	if err != nil {
		fmt.Println(err.Error())
	}
	for _, msg := range authTx.GetMsgs() {
		if bankDoc, ok := s.Gov.HandleTxMsg(msg); ok {
			fmt.Println(utils.MarshalJsonIgnoreErr(bankDoc))
		}
	}
}

func Deposit(s IntegrationTestSuite) {
	txBytes, err := hex.DecodeString("0A640A620A1E2F636F736D6F732E676F762E763162657461312E4D73674465706F73697412400807122A69616131646E6E786A636E6B63377672356B70356E3365796A7235703564393978636E783665786E33701A100A057569726973120733303030303030126A0A510A460A1F2F636F736D6F732E63727970746F2E736563703235366B312E5075624B657912230A210251CA6230319F0F129D2DE9CA5739DE9DCB4C685485B32AE742A8BBAA55E2CFD712040A02080118847512150A0F0A057569726973120631303030303010C09A0C1A40D355C23A621214DAF2D63DB8C5256701AE50B959B4F04AC15E3B9D5C106427743119C530E8324BE10C5D7BE9182BE4158925649CFFDCF116B656D92126001597")
	if err != nil {
		fmt.Println(err.Error())
	}
	authTx, err := GetSigningTx(txBytes)
	if err != nil {
		fmt.Println(err.Error())
	}
	for _, msg := range authTx.GetMsgs() {
		if bankDoc, ok := s.Gov.HandleTxMsg(msg); ok {
			fmt.Println(utils.MarshalJsonIgnoreErr(bankDoc))
		}
	}
}

func Vote(s IntegrationTestSuite) {
	txBytes, err := hex.DecodeString("0A510A4F0A1B2F636F736D6F732E676F762E763162657461312E4D7367566F74651230081E122A69616131757A396D6879667773376D77387136303471616E3730797A6E6C6E737338796B6E32726B7A30180112580A500A460A1F2F636F736D6F732E63727970746F2E736563703235366B312E5075624B657912230A2103972E24721A7C01A3D7E45A960012745D0C9B163D0D3D9189263C114A83919CB812040A020801181B120410C09A0C1A403BBDDD6D443B7C1311E74D5730FD04DADDB9D11983182F109F573358D8CF8F302E22FABA4CD52979B7C6575D6FF1F06505654AA2489EE89CD65D50D5A96E389B")
	if err != nil {
		fmt.Println(err.Error())
	}
	authTx, err := GetSigningTx(txBytes)
	if err != nil {
		fmt.Println(err.Error())
	}
	for _, msg := range authTx.GetMsgs() {
		if bankDoc, ok := s.Gov.HandleTxMsg(msg); ok {
			fmt.Println(utils.MarshalJsonIgnoreErr(bankDoc))
		}
	}
}
